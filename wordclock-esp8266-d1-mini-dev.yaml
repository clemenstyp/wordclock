packages:
  # Include all of the core configuration
  core: !include wordclock-esp8266-d1-mini.yaml



time:
  - id: !extend ds1307_time
    on_time:
      # Every 1 second
      - seconds: '0'
        minutes: '*'
        then:
          - if:
              condition:
                switch.is_on: test_run_status
              then:
                - lambda: |-
                    id(time_offset) += 19;
                    int timestamp_with_offset = id(sntp_time).now().timestamp + int(id(time_offset));
                    auto time = ESPTime::from_epoch_local(timestamp_with_offset);
                    ESP_LOGD("Time", "Testrun Time: %s", time.strftime("%Y-%m-%d %H:%M:%S").c_str());    
                - script.execute: 
                    id: calculate_wordclock_letter
                - if:
                    condition:
                      switch.is_off: manual_time
                    then:
                      - switch.turn_on: manual_time       

logger:
  level: debug

select:
  - platform: logger
    name: "Log-Level"
    entity_category: diagnostic
    web_server: { sorting_weight: 24, sorting_group_id: "sorting_group_diagnostic" }  

switch:
  - platform: template
    id: test_run_status
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    name: "Test Run"
    web_server: { sorting_weight: 90, sorting_group_id: "sorting_group_advanced_settings" }
    turn_on_action:
      - switch.turn_on: manual_time
    turn_off_action:
      - switch.turn_off: manual_time
    icon: mdi:clock-fast
    entity_category: diagnostic

# update:
#   - id: !extend firmware_update_beta
#     update_interval: 1h
#     disabled_by_default: false
